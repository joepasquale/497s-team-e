version: '3'

services:
    go_auth:
        build: ./goApp
        ports:
            - "8000:8000"
        depends_on: 
            - redis
            - mongos1
    redis:
        image: redis
        # restart: always
        ports:
            - "6379:6379" 
    mongo-express:
        image: mongo-express
        # restart: always
        ports:
            - 8081:8081
        depends_on: 
            - mongos1

    mongors1n1:
        container_name: mongors1n1
        image: mongo
        command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27018 
        ports:
            - "27101:27018"
        expose:
            - "27018"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./mongo_cluster/data1:/data/db

    mongors1n2:
        container_name: mongors1n2
        image: mongo
        command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27018 
        ports:
            - "27102:27018"
        expose:
            - "27018"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./mongo_cluster/data2:/data/db

    mongors1n3:
        container_name: mongors1n3
        image: mongo
        command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27018 
        ports:
            - "27103:27018"
        expose:
            - "27018"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./mongo_cluster/data3:/data/db

    # Sharded services        
    mongors2n1:
        container_name: mongors2n1
        image: mongo
        restart: always
        depends_on: 
            - mongocfg1
        command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27018
        ports:
            - "27201:27018"
        expose:
            - "27018"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./mongo_cluster/data4:/data/db

    mongors2n2:
        container_name: mongors2n2
        image: mongo
        restart: always
        depends_on: 
            - mongocfg1
        command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27018
        ports:
            - "27202:27018"
        expose:
            - "27018"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./mongo_cluster/data5:/data/db

    mongors2n3:
        container_name: mongors2n3
        image: mongo
        restart: always
        depends_on: 
            - mongocfg1
        command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27018
        ports:
            - "27203:27018"
        expose:
            - "27018"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./mongo_cluster/data6:/data/db

    # configuration service
    mongocfg1:
        container_name: mongocfg1
        restart: always
        image: mongo
        command: mongod --configsvr --replSet mongocfg --dbpath /data/db --port 27019
        environment: 
            TERM: xterm
        ports: 
            - "28001:27019"
        expose:
            - "27019"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./mongo_cluster/config1:/data/db

    mongocfg2:
        container_name: mongocfg2
        restart: always
        image: mongo
        command: mongod --configsvr --replSet mongocfg --dbpath /data/db --port 27019
        environment: 
            TERM: xterm
        ports: 
            - "28002:27019"
        expose:
            - "27019"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./mongo_cluster/config2:/data/db

    mongocfg3:
        container_name: mongocfg3
        restart: always
        image: mongo
        command: mongod --configsvr --replSet mongocfg --dbpath /data/db --port 27019
        environment: 
            TERM: xterm
        ports: 
            - "28003:27019"
        expose:
            - "27019"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./mongo_cluster/config3:/data/db

    # Routing service for the two sharded database
    mongos1:
        container_name: mongos1
        restart: always
        image: mongo
        depends_on: 
            - mongocfg1
            - mongocfg2
        command: mongos --configdb mongocfg/mongocfg1:27019,mongocfg2:27019,mongocfg3:27019 --port 27017
        ports:
            - "27017:27017"
        expose:
            - "27017"
        volumes: 
            - /etc/localtime:/etc/localtime:ro
        environment: 
            MONGO_INITDB_ROOT_USERNAME: admin 
            MONGO_INITDB_ROOT_PASSWORD: password 